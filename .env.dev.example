# ------------------------------ #
# SECTION 1 - USER CONFIGURATION
# ------------------------------ #
# Please feel free to update any and all settings in SECTION 1.

# How often should we check database for RSS feeds that need updating?
# Default: 60
# Unit: seconds
RSS_CHECK_INTERVAL_SECONDS="60"

# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #

# ------------------------------------- #
# SECTION 2 - APPLICATION CONFIGURATION
# ------------------------------------- #
# Usually, you don't need to change these.
# However, if you need to change some passwords around
# for security reasons, or you'd like to use different
# Message Queue topic names etc., this section is the place to do so.

# ------------------------- #
# POSTGRESQL - the database
# ------------------------- #

# application database name
POSTGRESQL_DB_NAME="dreamcatcher"

# database administrative user
POSTGRESQL_DB_USER="dreamcatcher_user"

# database administrative password
POSTGRESQL_DB_PASSWORD="example123ABCD"

# database full connection URI that is used while building Docker containers
# ... apologies for forcing you to write these here again but this ENV file does not support re-using values previously set
POSTGRESQL_DB_CONNECTION_URI="postgresql://dreamcatcher_user:example123ABCD@pg-0:5432/dreamcatcher?schema=public"

# repmgr password - this is for the replication user that handles synchronizing data between multiple backup database servers
REPMGR_PASSWORD="strongP4sSW0rD!"

# ----------------- #
# RSS LINK FETCHING
# ----------------- #
# Maximum of individual RSS links that can be fetched and processed at once.
RSS_MAX_FETCH_LINKS_IN_PARALLEL = 25

# Maximum retries for a failed individual RSS link fetch.
RSS_MAX_FETCH_LINK_FAIL_RETRIES = 5

# ---------------------- #
# COMMUNICATION CHANNELS
# ---------------------- #

# Redis telemetry cross-service comm channel
TELEMETRY_CHANNEL_NAME="telemetry"

# Kafka new RSS links topic
NEW_LINKS_CHANNEL_NAME="new_rss_links"

# Kafka new RSS links that were stored in the database topic
SAVED_LINKS_CHANNEL_NAME="new_saved_rss_links"

# Kafka new RSS feeds to fetch topic
FEED_FETCH_CHANNEL_NAME="fetch_feed"

# Kafka logs topic
LOGS_CHANNEL_NAME="logs"

# Kafka channel for invalid RSS urls that need fixing
RSS_INVALID_URLS_CHANEL_NAME="rss_url_invalid"

# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #
# --------------------------------------------------------------------------- #

# -------------------------------- #
# SECTION 3 - DOCKER CONFIGURATION
# -------------------------------- #
# You shouldn't be touching these unless you are a DevOps person
# responsible for running the Docker containerization.
# These settings are used to identify running services, their hostnames,
# ports, nodes etc.
# You can very well break the application if you change something here randomly.

# ----- #
# REDIS
# ----- #

# Redis server name (or in production, a comma-separated list of Redis sentinel hostnames with their ports -> s1:5555,s2:1234)
KEY_STORE_NODES="redis_server"

# Redis port (this is omitted in production and instead, KEY_STORE_NODES contain sentinel nodes with their ports)
KEY_STORE_PORT="6379"

# ----- #
# KAFKA
# ----- #

# Kafka nodes - comma-separated values of all Kafka nodes and their ports (DEV only contains a single node here)
MQ_NODES="kafka-0:9092"

# Ignore new partitioner warnings, since we're not about to use the old one anyway.
KAFKAJS_NO_PARTITIONER_WARNING=1

# ----------------- #
# TELEMETRY TRACING
# ----------------- #

# name of the Jaeger server responsible to log application traces
OTEL_EXPORTER_JAEGER_AGENT_HOST="trace_logger"